---
- name: Setup Ubuntu Server for Kubernetes
  hosts: hosts
  become: yes

  tasks:
    - name: Set hostname   
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Configure IP address and netplan
      copy:
        content: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              ens18:
                addresses:
                  - {{ hostvars[item].ansible_host }}/24  # Use the ansible_host variable
                  - {{ hostvars[item].second_ip }}/16  # Use the ansible_host variable
                nameservers:
                  addresses: [8.8.8.8, 8.8.4.4]
                routes:
                  - to: default
                    via: 192.168.8.1
        dest: /etc/netplan/00-installer-config.yaml
      delegate_to: "{{ item }}"  
      with_items: "{{ groups['hosts'] }}" 
        #- 192.168.8.240
        #- 192.168.8.239
       ##when: "'{{ inventory_hostname }}' in groups['node1']" # If in nentory file we have groups then we ad it here     
    
    - name: Set ip_forward to 1
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
    
     # Machine-id must be removed in order to prevent vms to get same ip
    - name: Remove contents of /etc/machine-id
      command: echo -n > /etc/machine-id

    - name: Remove /var/lib/dbus/machine-id
      file:
        path: /var/lib/dbus/machine-id
        state: absent

    - name: Create symbolic link
      file:
        src: /etc/machine-id
        dest: /var/lib/dbus/machine-id
        state: link



    - name: Unmount swap file
      mount:
        path: /swap.img
        state: absent
      ignore_errors: yes
      when: ansible_swaptotal_mb > 0

    - name: Remove swap entry from /etc/fstab
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: '^/swap.img.*swap.*'
      ignore_errors: yes
      when: ansible_swaptotal_mb > 0

    - name: Disable swap with swapoff
      command: swapoff -a
      become: true


    - name: Ensure /etc/resolv.conf has nameserver 8.8.8.8
      copy:
        content: "nameserver 8.8.8.8"
        dest: /etc/resolv.conf

    - name: Create containerd modules file
      copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/containerd.conf

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl settings for Kubernetes
      copy:
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
        dest: /etc/sysctl.d/99-kubernetes-cri.conf

    - name: Import Kubernetes APT GPG key
      shell: |
        sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg  
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg 
  
    - name: Create Kubernetes APT repository file
      copy:
        content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        dest: /etc/apt/sources.list.d/kubernetes.list


    - name: Apply sysctl settings
      command: sysctl --system

    - name: Update APT cache
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'    

    - name: Install containerd
      apt:
        name:
          - containerd
        state: present


    - name: Ensure /etc/containerd directory exists
      file:
        path: /etc/containerd
        state: directory



    - name: Create containerd configuration file
      copy:
        content: "{{ lookup('file', 'files/containerd_config.toml') }}"
        dest: /etc/containerd/config.toml

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted


    - name: Disable swap permanently (update /etc/fstab)
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: '^UUID=\S+\s+\S+\s+swap.img\s+'
      ignore_errors: yes
      when: ansible_swaptotal_mb > 0


    - name: Add host entry to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ ansible_host }} master"
  #########################################################
          #- name: Update APT cache
          #apt:
          #update_cache: yes


    #- name: Import Kubernetes APT GPG key
    #  shell: |
    #    sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg  
    #  args:
     #   creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg 
  
    - name: Install required packages (apt-transport-https, ca-certificates, curl)
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present     

    #- name: Create Kubernetes APT repository file
    #  copy:
    #    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    #    dest: /etc/apt/sources.list.d/kubernetes.list


    - name: Update APT cache again
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'
      
    - name: Display available Kubernetes versions
      command: apt-cache madison kubeadm
      register: kubeadm_version

    - name: Install Kubernetes packages (kubelet, kubeadm, kubectl, cri-tools)
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - cri-tools
        state: present

    - name: Mark Kubernetes packages as held
      apt:
        state: present
        package: "{{ item }}"
      loop:
        - kubelet
        - kubeadm
        - kubectl

    # Tesing
# New tasks for Kubernetes setup
- name: Initialize Kubernetes master and setup cluster
  hosts: master
  become: yes
  tasks:
    - name: Stop kubelet service
      service:
        name: kubelet
        state: stopped

    - name: Reset kubeadm
      command: kubeadm reset -f

    - name: Clean up etcd data directory
      file:
        path: /var/lib/etcd
        state: absent
        force: yes

    - name: Clean up Kubernetes manifests directory
      file:
        path: /etc/kubernetes/manifests
        state: absent
        force: yes
    - name: Initialize Kubernetes master
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init

    - name: Create .kube directory for the user
      file:
        path: /home/el10/.kube
        state: directory
        mode: '0755'
      become: yes
      become_user: "el10"

    - name: Copy kube admin config to user's kube config
      command: cp /etc/kubernetes/admin.conf /home/el10/.kube/config
      become: yes

    - name: Change ownership of kube config
      file:
        path: /home/el10/.kube/config
        owner: "el10"
        group: "el10"
        mode: '0644'
      become: yes

    - name: Apply Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      environment:
        KUBECONFIG: /home/el10/.kube/config

    - name: Get kubeadm join command
      command: kubeadm token create --print-join-command
      register: kubeadm_join_command

- name: Join Kubernetes worker nodes to the cluster
  hosts: worker1
  become: yes
  tasks:
    - name: Join Kubernetes cluster
      command: "{{ hostvars['master']['kubeadm_join_command'].stdout }}"    